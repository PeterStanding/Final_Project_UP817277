/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package final_project;

import java.util.ArrayList;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author Peter Standing - UP817277
 */
public class homePage extends javax.swing.JFrame {

    /**
     * Creates new form homePage
     */
    public homePage(String stuName, String stuSchool) {
        initComponents();
        currName = stuName;
        currSchool = stuSchool;
        this.setExtendedState(homePage.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    String diff,operation,currName,currSchool;
    int numQ;
    ImageIcon icon;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        homeLabel = new javax.swing.JLabel();
        ks1Label = new javax.swing.JLabel();
        ks2Label = new javax.swing.JLabel();
        logLabel = new javax.swing.JLabel();
        profileLabel = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        homePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        puzzlePanel = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        cover1 = new javax.swing.JButton();
        cover2 = new javax.swing.JButton();
        cover3 = new javax.swing.JButton();
        cover4 = new javax.swing.JButton();
        cover5 = new javax.swing.JButton();
        cover7 = new javax.swing.JButton();
        cover9 = new javax.swing.JButton();
        cover8 = new javax.swing.JButton();
        cover6 = new javax.swing.JButton();
        shopPanel = new javax.swing.JPanel();
        shopTwo = new javax.swing.JLabel();
        shopPr1 = new javax.swing.JLabel();
        purchase1 = new javax.swing.JButton();
        shopOne = new javax.swing.JLabel();
        shopPr2 = new javax.swing.JLabel();
        purchase2 = new javax.swing.JButton();
        shopFour = new javax.swing.JLabel();
        shopThree = new javax.swing.JLabel();
        shopPr3 = new javax.swing.JLabel();
        purchase3 = new javax.swing.JButton();
        purchase4 = new javax.swing.JButton();
        shopPr4 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        ks1Panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        javax.swing.JButton ks1GameButton = new javax.swing.JButton();
        easyDiff = new javax.swing.JToggleButton();
        mediumDiff = new javax.swing.JToggleButton();
        hardDiff = new javax.swing.JToggleButton();
        opChooser = new javax.swing.JComboBox<>();
        ks1RevisionButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ks2Panel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rev2Button = new javax.swing.JButton();
        KS2Game = new javax.swing.JButton();
        easyKS2 = new javax.swing.JToggleButton();
        mediumKS2 = new javax.swing.JToggleButton();
        hardKS2 = new javax.swing.JToggleButton();
        skillChooser = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        profilePanel = new javax.swing.JPanel();
        profileTitle = new javax.swing.JLabel();
        rocketScore = new javax.swing.JLabel();
        nameProfile = new javax.swing.JLabel();
        highRocket = new javax.swing.JLabel();
        schoolLabel = new javax.swing.JLabel();
        profAvatar = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        highSum = new javax.swing.JLabel();
        schoolProfile = new javax.swing.JLabel();
        sumScore = new javax.swing.JLabel();
        avaChoice = new javax.swing.JComboBox<>();
        changeButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        totalCoins = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Math App Home");

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        homeLabel.setBackground(new java.awt.Color(153, 255, 255));
        homeLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        homeLabel.setText("Home Page");
        homeLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        homeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeLabelMouseClicked(evt);
            }
        });

        ks1Label.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        ks1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ks1Label.setText("KS1");
        ks1Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ks1Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ks1LabelMouseClicked(evt);
            }
        });

        ks2Label.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        ks2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ks2Label.setText("KS2");
        ks2Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ks2Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ks2LabelMouseClicked(evt);
            }
        });

        logLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        logLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logLabel.setText("Log Out");
        logLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        logLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logLabelMouseClicked(evt);
            }
        });

        profileLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        profileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profileLabel.setText("Profile");
        profileLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        profileLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileLabelMouseClicked(evt);
            }
        });

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/final_project/backgrounds/turtle.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(homeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(profileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ks2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ks1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(logo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(homeLabel)
                .addGap(18, 18, 18)
                .addComponent(ks1Label)
                .addGap(18, 18, 18)
                .addComponent(ks2Label)
                .addGap(18, 18, 18)
                .addComponent(profileLabel)
                .addGap(222, 222, 222)
                .addComponent(logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(logLabel)
                .addContainerGap())
        );

        jLayeredPane2.setBackground(new java.awt.Color(255, 0, 204));
        jLayeredPane2.setLayout(new javax.swing.OverlayLayout(jLayeredPane2));

        homePanel.setBackground(new java.awt.Color(255, 51, 51));
        homePanel.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Welcome To The App");
        homePanel.add(jLabel1);
        jLabel1.setBounds(483, 0, 341, 75);

        puzzlePanel.setBackground(new java.awt.Color(255, 153, 255));
        puzzlePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        puzzlePanel.setPreferredSize(new java.awt.Dimension(600, 180));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(660, 600));

        cover1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover1.setText("Page 1");
        cover1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover1.setPreferredSize(new java.awt.Dimension(200, 60));
        cover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover1ActionPerformed(evt);
            }
        });

        cover2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover2.setText("Page 2");
        cover2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover2.setPreferredSize(new java.awt.Dimension(200, 60));
        cover2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover2ActionPerformed(evt);
            }
        });

        cover3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover3.setText("Page 3");
        cover3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover3.setPreferredSize(new java.awt.Dimension(200, 60));
        cover3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover3ActionPerformed(evt);
            }
        });

        cover4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover4.setText("Page 4");
        cover4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover4.setPreferredSize(new java.awt.Dimension(200, 60));
        cover4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover4ActionPerformed(evt);
            }
        });

        cover5.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover5.setText("Page 5");
        cover5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover5.setPreferredSize(new java.awt.Dimension(200, 60));
        cover5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover5ActionPerformed(evt);
            }
        });

        cover7.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover7.setText("Page 7");
        cover7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover7.setPreferredSize(new java.awt.Dimension(200, 60));
        cover7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover7ActionPerformed(evt);
            }
        });

        cover9.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover9.setText("Page 9");
        cover9.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover9.setPreferredSize(new java.awt.Dimension(200, 60));
        cover9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover9ActionPerformed(evt);
            }
        });

        cover8.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover8.setText("Page 8");
        cover8.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover8.setPreferredSize(new java.awt.Dimension(200, 60));
        cover8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover8ActionPerformed(evt);
            }
        });

        cover6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cover6.setText("Page 6");
        cover6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cover6.setPreferredSize(new java.awt.Dimension(200, 60));
        cover6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cover6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cover7, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cover4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cover1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cover2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cover5, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cover8, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cover6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cover3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cover9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cover1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cover2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cover3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cover4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cover6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cover5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cover7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cover8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cover9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        puzzlePanel.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout puzzlePanelLayout = new javax.swing.GroupLayout(puzzlePanel);
        puzzlePanel.setLayout(puzzlePanelLayout);
        puzzlePanelLayout.setHorizontalGroup(
            puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puzzlePanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        puzzlePanelLayout.setVerticalGroup(
            puzzlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puzzlePanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        homePanel.add(puzzlePanel);
        puzzlePanel.setBounds(680, 120, 670, 610);

        shopPanel.setBackground(new java.awt.Color(204, 255, 255));

        shopTwo.setBackground(new java.awt.Color(153, 255, 153));
        shopTwo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        shopPr1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        shopPr1.setText("100 Coins");

        purchase1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        purchase1.setText("Purchase");
        purchase1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchase1ActionPerformed(evt);
            }
        });

        shopOne.setBackground(new java.awt.Color(153, 255, 153));
        shopOne.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        shopPr2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        shopPr2.setText("100 Coins");

        purchase2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        purchase2.setText("Purchase");
        purchase2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchase2ActionPerformed(evt);
            }
        });

        shopFour.setBackground(new java.awt.Color(153, 255, 153));
        shopFour.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        shopThree.setBackground(new java.awt.Color(153, 255, 153));
        shopThree.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        shopPr3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        shopPr3.setText("100 Coins");

        purchase3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        purchase3.setText("Purchase");
        purchase3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchase3ActionPerformed(evt);
            }
        });

        purchase4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        purchase4.setText("Purchase");
        purchase4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchase4ActionPerformed(evt);
            }
        });

        shopPr4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        shopPr4.setText("100 Coins");

        javax.swing.GroupLayout shopPanelLayout = new javax.swing.GroupLayout(shopPanel);
        shopPanel.setLayout(shopPanelLayout);
        shopPanelLayout.setHorizontalGroup(
            shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shopPanelLayout.createSequentialGroup()
                .addGroup(shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(shopPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(shopFour, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(shopTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(shopPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(shopThree, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(shopOne, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(shopPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(shopPr3)
                        .addGap(46, 46, 46)
                        .addComponent(purchase3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(shopPr1)
                        .addGap(46, 46, 46)
                        .addComponent(purchase1)
                        .addGap(16, 16, 16))
                    .addGroup(shopPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(shopPr4)
                        .addGap(46, 46, 46)
                        .addComponent(purchase4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(shopPr2)
                        .addGap(46, 46, 46)
                        .addComponent(purchase2)
                        .addGap(9, 9, 9)))
                .addGap(76, 76, 76))
        );
        shopPanelLayout.setVerticalGroup(
            shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shopThree, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shopOne, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shopPr1)
                    .addComponent(purchase1)
                    .addComponent(shopPr3)
                    .addComponent(purchase3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(shopPanelLayout.createSequentialGroup()
                        .addComponent(shopFour, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shopPr4)
                            .addComponent(purchase4)))
                    .addGroup(shopPanelLayout.createSequentialGroup()
                        .addComponent(shopTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(shopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shopPr2)
                            .addComponent(purchase2))))
                .addGap(28, 28, 28))
        );

        homePanel.add(shopPanel);
        shopPanel.setBounds(40, 93, 579, 658);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/final_project/backgrounds/homePg.png"))); // NOI18N
        homePanel.add(background);
        background.setBounds(-5, 0, 1940, 1080);

        jLayeredPane2.add(homePanel);

        ks1Panel.setBackground(new java.awt.Color(204, 255, 204));
        ks1Panel.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("KS1 Panel");
        ks1Panel.add(jLabel2);
        jLabel2.setBounds(465, 60, 158, 44);

        ks1GameButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        ks1GameButton.setText("Game");
        ks1GameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ks1GameButtonActionPerformed(evt);
            }
        });
        ks1Panel.add(ks1GameButton);
        ks1GameButton.setBounds(240, 620, 249, 145);

        easyDiff.setText("Easy");
        easyDiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                easyDiffActionPerformed(evt);
            }
        });
        ks1Panel.add(easyDiff);
        easyDiff.setBounds(380, 490, 69, 23);

        mediumDiff.setText("Medium");
        mediumDiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumDiffActionPerformed(evt);
            }
        });
        ks1Panel.add(mediumDiff);
        mediumDiff.setBounds(380, 540, 110, 23);

        hardDiff.setText("Hard");
        hardDiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardDiffActionPerformed(evt);
            }
        });
        ks1Panel.add(hardDiff);
        hardDiff.setBounds(380, 580, 110, 23);

        opChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Addition", "Subtraction", "Multiply", "Divide" }));
        ks1Panel.add(opChooser);
        opChooser.setBounds(290, 540, 80, 20);

        ks1RevisionButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        ks1RevisionButton.setText("Revision");
        ks1RevisionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ks1RevisionButtonActionPerformed(evt);
            }
        });
        ks1Panel.add(ks1RevisionButton);
        ks1RevisionButton.setBounds(260, 260, 231, 94);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/final_project/backgrounds/ks1Pg.png"))); // NOI18N
        ks1Panel.add(jLabel5);
        jLabel5.setBounds(0, 0, 1984, 1080);

        jLayeredPane2.add(ks1Panel);

        ks2Panel.setBackground(new java.awt.Color(102, 204, 255));
        ks2Panel.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("KS2 Panel");
        ks2Panel.add(jLabel3);
        jLabel3.setBounds(598, 25, 158, 44);

        rev2Button.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        rev2Button.setText("Revision");
        rev2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rev2ButtonActionPerformed(evt);
            }
        });
        ks2Panel.add(rev2Button);
        rev2Button.setBounds(1250, 230, 189, 110);

        KS2Game.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        KS2Game.setText("Game");
        KS2Game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KS2GameActionPerformed(evt);
            }
        });
        ks2Panel.add(KS2Game);
        KS2Game.setBounds(1240, 660, 196, 90);

        easyKS2.setText("Easy");
        easyKS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                easyKS2ActionPerformed(evt);
            }
        });
        ks2Panel.add(easyKS2);
        easyKS2.setBounds(1395, 560, 90, 23);

        mediumKS2.setText("Medium");
        mediumKS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumKS2ActionPerformed(evt);
            }
        });
        ks2Panel.add(mediumKS2);
        mediumKS2.setBounds(1389, 590, 100, 23);

        hardKS2.setText("Hard");
        hardKS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardKS2ActionPerformed(evt);
            }
        });
        ks2Panel.add(hardKS2);
        hardKS2.setBounds(1420, 620, 55, 23);

        skillChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Addition", "Subtraction", "Multiplication", "Division", "Rounding", "Algebra", "Percentages", "Ratio", "Fraction" }));
        ks2Panel.add(skillChooser);
        skillChooser.setBounds(1220, 590, 141, 20);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/final_project/backgrounds/ks2Pg.png"))); // NOI18N
        ks2Panel.add(jLabel6);
        jLabel6.setBounds(0, 0, 1984, 1080);

        jLayeredPane2.add(ks2Panel);

        profilePanel.setBackground(new java.awt.Color(255, 255, 153));
        profilePanel.setLayout(null);

        profileTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        profileTitle.setText("User Profile");
        profilePanel.add(profileTitle);
        profileTitle.setBounds(447, 50, 282, 58);

        rocketScore.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        rocketScore.setText("rocket score");
        profilePanel.add(rocketScore);
        rocketScore.setBounds(1060, 600, 263, 43);

        nameProfile.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        nameProfile.setText("name");
        profilePanel.add(nameProfile);
        nameProfile.setBounds(1110, 230, 263, 55);

        highRocket.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        highRocket.setText("High Score Rocket:");
        profilePanel.add(highRocket);
        highRocket.setBounds(980, 550, 309, 43);

        schoolLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        schoolLabel.setText("School:");
        profilePanel.add(schoolLabel);
        schoolLabel.setBounds(990, 300, 118, 43);
        profilePanel.add(profAvatar);
        profAvatar.setBounds(160, 190, 260, 260);

        nameLabel.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        nameLabel.setText("Name:");
        profilePanel.add(nameLabel);
        nameLabel.setBounds(990, 230, 107, 43);

        highSum.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        highSum.setText("High Score Sum Snap:");
        profilePanel.add(highSum);
        highSum.setBounds(980, 410, 363, 43);

        schoolProfile.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        schoolProfile.setText("school");
        profilePanel.add(schoolProfile);
        schoolProfile.setBounds(1120, 290, 263, 67);

        sumScore.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        sumScore.setText("sum score");
        profilePanel.add(sumScore);
        sumScore.setBounds(1060, 460, 263, 43);

        avaChoice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        avaChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Car", "Flowers", "Sun", "Star", "Pencil" }));
        profilePanel.add(avaChoice);
        avaChoice.setBounds(200, 470, 200, 35);

        changeButton.setText("Change");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });
        profilePanel.add(changeButton);
        changeButton.setBounds(280, 520, 69, 23);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel4.setText("Total Coins Collected:");
        profilePanel.add(jLabel4);
        jLabel4.setBounds(980, 690, 346, 43);

        totalCoins.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        profilePanel.add(totalCoins);
        totalCoins.setBounds(1080, 740, 148, 43);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/final_project/backgrounds/profilePg.png"))); // NOI18N
        profilePanel.add(jLabel7);
        jLabel7.setBounds(0, 0, 1984, 1080);

        jLayeredPane2.add(profilePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1463, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     /**
     * These methods are used to navigate the different overall sections of the application. They are triggered by the user clicking the relevant JLabels
     * on the left hand side of the application.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void ks2LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ks2LabelMouseClicked
        //Opens the KS2 Panel
        ks2Panel.show();
        ks1Panel.hide();
        homePanel.hide();
        profilePanel.hide();
    }//GEN-LAST:event_ks2LabelMouseClicked
    private void ks1LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ks1LabelMouseClicked
        //Opens the KS1 Panel
        ks1Panel.show();
        ks2Panel.hide();
        homePanel.hide();
        profilePanel.hide();
    }//GEN-LAST:event_ks1LabelMouseClicked
    private void homeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeLabelMouseClicked
        //Opens the Home Panel
        homePanel.show();
        ks1Panel.hide();
        ks2Panel.hide();
        profilePanel.hide();
        
        ArrayList <String> unlock = keyFunctions.readFile("db/unlocked.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> puzzle = keyFunctions.readFile("db/puzzle.txt");
        int k = nameList.indexOf(currName);
        String list = unlock.get(k);
        String puzzList = puzzle.get(k);
        
        icon = new ImageIcon("avatars/pixelHeart.png"); 
        shopOne.setIcon(icon);
        
        icon = new ImageIcon("avatars/jewel.png"); 
        shopTwo.setIcon(icon);
        
        icon = new ImageIcon("avatars/grid.png"); 
        shopThree.setIcon(icon);  
        
        icon = new ImageIcon("avatars/tri.png"); 
        shopFour.setIcon(icon); 
        
        if(puzzList.contains("1")){
            cover1.hide();
        }
        if(puzzList.contains("2")){
            cover2.hide();
        }
        if(puzzList.contains("3")){
            cover3.hide();
        }
        if(puzzList.contains("4")){
            cover4.hide();
        }
        if(puzzList.contains("5")){
            cover5.hide();
        }
        if(puzzList.contains("6")){
            cover6.hide();
        }
        if(puzzList.contains("7")){
            cover7.hide();
        }
        if(puzzList.contains("8")){
            cover8.hide();
        }
        if(puzzList.contains("9")){
            cover9.hide();
        }
    }//GEN-LAST:event_homeLabelMouseClicked
    private void logLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logLabelMouseClicked
        //Logs out the users Account ready for the next user
        this.dispose();
        login.main();
    }//GEN-LAST:event_logLabelMouseClicked
    private void profileLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileLabelMouseClicked
        //Opens the Users Profile
        profilePanel.show();
        homePanel.hide();
        ks1Panel.hide();
        ks2Panel.hide();
        
        nameProfile.setText(currName);
        
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> profPic = keyFunctions.readFile("db/profile.txt"); 
        ArrayList <String> rocketList = keyFunctions.readFile("db/rocketScores.txt");
        ArrayList <String> sumList = keyFunctions.readFile("db/sumSnapScores.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");
        
        int k = nameList.indexOf(currName);
        String currPic = profPic.get(k);
        if (currPic.equals("car")){
           icon = new ImageIcon("avatars/car.png"); 
        } else if (currPic.equals("flowers")){
           icon = new ImageIcon("avatars/flowers.png"); 
        } else if (currPic.equals("sun")){
           icon = new ImageIcon("avatars/sun.png"); 
        } else if (currPic.equals("star")){
           icon = new ImageIcon("avatars/star.png"); 
        } else if (currPic.equals("pencil")){
           icon = new ImageIcon("avatars/pencil.png");
        }
        profAvatar.setIcon(icon);
        String currSnap = rocketList.get(k);
        sumScore.setText(currSnap);
        String currRock = rocketList.get(k);
        rocketScore.setText("Level "+currRock);
        String currCoins = coinList.get(k);
        totalCoins.setText(currCoins);
               
    }//GEN-LAST:event_profileLabelMouseClicked

     /**
     * A method that allows the user to alter their own profile picture for their account. The current picture is stored in a database table and once the change button has been
     * pressed, it updates the record with this new image file name.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> profPic = keyFunctions.readFile("db/profile.txt");
        ArrayList <String> unlock = keyFunctions.readFile("db/unlocked.txt");

        int k = nameList.indexOf(currName);
        String list = unlock.get(k);

        if (list.contains("pixelHeart")&&list.contains("jewel")){
            avaChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Car", "Flowers", "Sun", "Star", "Pencil", "PixelHeart", "Jewel" }));
        } else if (list.contains("pixelHeart")){
            avaChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Car", "Flowers", "Sun", "Star", "Pencil", "PixelHeart" }));
        } else if (list.contains("jewel")){
            avaChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Car", "Flowers", "Sun", "Star", "Pencil", "Jewel" }));
        } else {}

        String av = (String)avaChoice.getSelectedItem();
        if (av.equals("Car")){
            //System.out.print("test");
            keyFunctions.writeFile("db/profile.txt","car",k);
        }
        if (av.equals("Flowers")){
            keyFunctions.writeFile("db/profile.txt","flowers",k);
        }
        if (av.equals("Sun")){
            keyFunctions.writeFile("db/profile.txt","sun",k);
        }
        if (av.equals("Star")){
            keyFunctions.writeFile("db/profile.txt","star",k);
        }
        if (av.equals("Pencil")){
            keyFunctions.writeFile("db/profile.txt","pencil",k);
        }
        if (av.equals("PixelHeart")){
            keyFunctions.writeFile("db/profile.txt","pencil",k);
        }
        if (av.equals("Jewel")){
            keyFunctions.writeFile("db/profile.txt","pencil",k);
        }
    }//GEN-LAST:event_changeButtonActionPerformed

     /**
     * A method that opens the Key Stage 1 revision element of the application.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void ks1RevisionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ks1RevisionButtonActionPerformed
        ks1Revision.main();
    }//GEN-LAST:event_ks1RevisionButtonActionPerformed

    /**
     * These methods allow the user to select the difficulty of the game that they wish to implement.
     * The three different methods allow only one difficulty to be set at once, as each method turns the other buttons to be false.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void hardDiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardDiffActionPerformed
        mediumDiff.setSelected(false);
        easyDiff.setSelected(false);
    }//GEN-LAST:event_hardDiffActionPerformed
    private void mediumDiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumDiffActionPerformed
        easyDiff.setSelected(false);
        hardDiff.setSelected(false);
    }//GEN-LAST:event_mediumDiffActionPerformed
    private void easyDiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_easyDiffActionPerformed
        mediumDiff.setSelected(false);
        hardDiff.setSelected(false);
    }//GEN-LAST:event_easyDiffActionPerformed

    /**
     * The method that opens the first game. It takes into account which difficulty the user has selected, as well as the operation that they plan on
     * using within the game.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void ks1GameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ks1GameButtonActionPerformed
        if (easyDiff.isSelected()){
            diff = "easy";
            numQ = 12;
        }
        if (mediumDiff.isSelected()){
            diff = "medium";
            numQ = 16;
        }
        if (hardDiff.isSelected()){
            diff = "hard";
            numQ = 20;
        }

        String opSelected = (String)opChooser.getSelectedItem();

        if (opSelected.equals("Addition")){
            operation = "+";
        }
        if (opSelected.equals("Subtraction")){
            operation = "-";
        }
        if (opSelected.equals("Multiply")){
            operation = "*";
        }
        if (opSelected.equals("Divide")){
            operation = "/";
        }

        //Generates the Canavs on a JFrame
        gameOne.main(operation,numQ,diff,currName);
    }//GEN-LAST:event_ks1GameButtonActionPerformed

    /**
     * These methods are used by the user to purchase different profile pictures from the front page. It takes into account the users current Coins and changes the
     * number of coins they have respective of their number before. 
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void purchase4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchase4ActionPerformed
        //Method to Purchase the Fourth Picture in the Shop
        ArrayList <String> unlock = keyFunctions.readFile("db/unlocked.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = unlock.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedPic = "grid";
        String newPicList = list + ", " + unlockedPic;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/unlocked.txt",newPicList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_purchase4ActionPerformed
    private void purchase3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchase3ActionPerformed
        //Method to Purchase the Third Picture in the Shop
        ArrayList <String> unlock = keyFunctions.readFile("db/unlocked.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = unlock.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedPic = "tri";
        String newPicList = list + ", " + unlockedPic;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/unlocked.txt",newPicList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_purchase3ActionPerformed
    private void purchase2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchase2ActionPerformed
        //Method to Purchase the Second Picture in the Shop
        ArrayList <String> unlock = keyFunctions.readFile("db/unlocked.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = unlock.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedPic = "jewel";
        String newPicList = list + ", " + unlockedPic;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/unlocked.txt",newPicList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_purchase2ActionPerformed
    private void purchase1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchase1ActionPerformed
        //Method to Purchase the First Picture in the Shop
        ArrayList <String> unlock = keyFunctions.readFile("db/unlocked.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = unlock.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedPic = "pixelHeart";
        String newPicList = list + ", " + unlockedPic;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/unlocked.txt",newPicList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_purchase1ActionPerformed

    /**
     * These methods allow the user to select the difficulty of the game that they wish to implement.
     * The three different methods allow only one difficulty to be set at once, as each method turns the other buttons to be false.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void hardKS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardKS2ActionPerformed
        mediumKS2.setSelected(false);
        easyKS2.setSelected(false);
    }//GEN-LAST:event_hardKS2ActionPerformed
    private void mediumKS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumKS2ActionPerformed
        easyKS2.setSelected(false);
        hardKS2.setSelected(false);
    }//GEN-LAST:event_mediumKS2ActionPerformed
    private void easyKS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_easyKS2ActionPerformed
        mediumKS2.setSelected(false);
        hardKS2.setSelected(false);
    }//GEN-LAST:event_easyKS2ActionPerformed

    /**
     * The method that opens the second game. It takes into account which difficulty the user has selected, as well as the operation that they plan on
     * using within the game.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void KS2GameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KS2GameActionPerformed
        if (easyKS2.isSelected()){
            diff = "easy";
        }
        if (mediumKS2.isSelected()){
            diff = "medium";
        }
        if (hardKS2.isSelected()){
            diff = "hard";
        }

        String skillSelected = (String)skillChooser.getSelectedItem();

        //Generates the Canavs on a JFrame
        gameTwo.main(diff,skillSelected,currName);
    }//GEN-LAST:event_KS2GameActionPerformed
    private void rev2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rev2ButtonActionPerformed
        /**
        * A method that opens the Key Stage 2 revision element of the application.
        * 
        * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
        */
        ks2Revision.main();
    }//GEN-LAST:event_rev2ButtonActionPerformed

    /**
     * These methods are to reveal the image hidden behind the puzzle on the front page of the application
     * Once the home page button is pressed it reads the database to see which buttons have already been pressed, and hides them.
     * Once a new button is pressed, it rights it to the database and hides it.
     * 
     * @param evt Takes into account when the button on the homePage form has been pressed, triggering the code to execute 
     */
    private void cover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover1ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "1";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover1ActionPerformed
    private void cover2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover2ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "2";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover2ActionPerformed
    private void cover3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover3ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "3";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover3ActionPerformed
    private void cover4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover4ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "4";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover4ActionPerformed
    private void cover5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover5ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "5";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover5ActionPerformed
    private void cover7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover7ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "7";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover7ActionPerformed
    private void cover9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover9ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "9";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover9ActionPerformed
    private void cover8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover8ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "8";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover8ActionPerformed
    private void cover6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cover6ActionPerformed
        //Method to Remove a Cover from the Puzzle Picture
        ArrayList <String> revealed = keyFunctions.readFile("db/puzzle.txt");
        ArrayList <String> nameList = keyFunctions.readFile("db/names.txt");
        ArrayList <String> coinList = keyFunctions.readFile("db/coins.txt");

        int k = nameList.indexOf(currName);
        String list = revealed.get(k);
        int currCoin = Integer.parseInt(coinList.get(k));
        String unlockedCover = "6";
        String newCoverList = list + ", " + unlockedCover;
        if (currCoin >= 100){
            String coinWrite = Integer.toString(currCoin - 100);
            keyFunctions.writeFile("db/puzzle.txt",newCoverList,k);
            keyFunctions.writeFile("db/coins.txt",coinWrite,k);
        }
    }//GEN-LAST:event_cover6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String name, String school) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homePage(name,school).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton KS2Game;
    private javax.swing.JComboBox<String> avaChoice;
    private javax.swing.JLabel background;
    private javax.swing.JButton changeButton;
    private javax.swing.JButton cover1;
    private javax.swing.JButton cover2;
    private javax.swing.JButton cover3;
    private javax.swing.JButton cover4;
    private javax.swing.JButton cover5;
    private javax.swing.JButton cover6;
    private javax.swing.JButton cover7;
    private javax.swing.JButton cover8;
    private javax.swing.JButton cover9;
    private javax.swing.JToggleButton easyDiff;
    private javax.swing.JToggleButton easyKS2;
    private javax.swing.JToggleButton hardDiff;
    private javax.swing.JToggleButton hardKS2;
    private javax.swing.JLabel highRocket;
    private javax.swing.JLabel highSum;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel ks1Label;
    private javax.swing.JPanel ks1Panel;
    private javax.swing.JButton ks1RevisionButton;
    private javax.swing.JLabel ks2Label;
    private javax.swing.JPanel ks2Panel;
    private javax.swing.JLabel logLabel;
    private javax.swing.JLabel logo;
    private javax.swing.JToggleButton mediumDiff;
    private javax.swing.JToggleButton mediumKS2;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameProfile;
    private javax.swing.JComboBox<String> opChooser;
    private javax.swing.JLabel profAvatar;
    private javax.swing.JLabel profileLabel;
    private javax.swing.JPanel profilePanel;
    private javax.swing.JLabel profileTitle;
    private javax.swing.JButton purchase1;
    private javax.swing.JButton purchase2;
    private javax.swing.JButton purchase3;
    private javax.swing.JButton purchase4;
    private javax.swing.JLayeredPane puzzlePanel;
    private javax.swing.JButton rev2Button;
    private javax.swing.JLabel rocketScore;
    private javax.swing.JLabel schoolLabel;
    private javax.swing.JLabel schoolProfile;
    private javax.swing.JLabel shopFour;
    private javax.swing.JLabel shopOne;
    private javax.swing.JPanel shopPanel;
    private javax.swing.JLabel shopPr1;
    private javax.swing.JLabel shopPr2;
    private javax.swing.JLabel shopPr3;
    private javax.swing.JLabel shopPr4;
    private javax.swing.JLabel shopThree;
    private javax.swing.JLabel shopTwo;
    private javax.swing.JComboBox<String> skillChooser;
    private javax.swing.JLabel sumScore;
    private javax.swing.JLabel totalCoins;
    // End of variables declaration//GEN-END:variables
}
